package controller;import model.User;import view.*;import view.test.GameQuickMathFrm;import javax.swing.*;/** * @author Admin */public class Client {    public static User user;    public static LoginFrm loginFrm;    public static RegisterFrm registerFrm;    public static HomePageFrm homePageFrm;    public static RoomListFrm roomListFrm;    public static FriendListFrm friendListFrm;    public static FindRoomFrm findRoomFrm;    public static WaitingRoomFrm waitingRoomFrm;    public static CreateRoomPasswordFrm createRoomPasswordFrm;    public static JoinRoomPasswordFrm joinRoomPasswordFrm;    public static CompetitorInfoFrm competitorInfoFrm;    public static RankFrm rankFrm;    public static GameNoticeFrm gameNoticeFrm;    public static FriendRequestFrm friendRequestFrm;    public static RoomNameFrm roomNameFrm;    public static GameQuickMathFrm gameQuickMathFrm;    public static SocketHandle socketHandle;    public static MatchHistoryFrm matchHistoryFrm;    public Client() {    }    public static JFrame getVisibleJFrame() {        if (roomListFrm != null && roomListFrm.isVisible()) {            return roomListFrm;        }        if (friendListFrm != null && friendListFrm.isVisible()) {            return friendListFrm;        }        if (createRoomPasswordFrm != null && createRoomPasswordFrm.isVisible()) {            return createRoomPasswordFrm;        }        if (joinRoomPasswordFrm != null && joinRoomPasswordFrm.isVisible()) {            return joinRoomPasswordFrm;        }        if (rankFrm != null && rankFrm.isVisible()) {            return rankFrm;        }        return homePageFrm;    }    // Thêm phương thức static để có thể dùng ở bất kỳ đâu    public static void setDefaultLookAndFeel() {        try {            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());        } catch (Exception e) {            e.printStackTrace();        }    }    public static void openView(View viewName) {        if (viewName != null) {            switch (viewName) {                case LOGIN://                    setDefaultLookAndFeel();                    loginFrm = new LoginFrm();                    loginFrm.setVisible(true);                    break;                case REGISTER://                    setDefaultLookAndFeel();                    registerFrm = new RegisterFrm();                    registerFrm.setVisible(true);                    break;                case HOMEPAGE://                    setDefaultLookAndFeel();                    homePageFrm = new HomePageFrm();                    homePageFrm.setVisible(true);                    break;                case ROOM_LIST://                    setDefaultLookAndFeel();/                    roomListFrm = new RoomListFrm();                    roomListFrm.setVisible(true);                    break;                case FRIEND_LIST://                    setDefaultLookAndFeel();                    friendListFrm = new FriendListFrm();                    friendListFrm.setVisible(true);                    break;                case FIND_ROOM://                    setDefaultLookAndFeel();                    findRoomFrm = new FindRoomFrm();                    findRoomFrm.setVisible(true);                    break;                case WAITING_ROOM://                    setDefaultLookAndFeel();                    waitingRoomFrm = new WaitingRoomFrm();                    waitingRoomFrm.setVisible(true);                    break;                case GAME_QUICK_MATH:                    gameQuickMathFrm = new GameQuickMathFrm();                    gameQuickMathFrm.setVisible(true);                    break;                case CREATE_ROOM_PASSWORD://                    setDefaultLookAndFeel();                    createRoomPasswordFrm = new CreateRoomPasswordFrm();                    createRoomPasswordFrm.setVisible(true);                    break;                case RANK://                    setDefaultLookAndFeel();                    rankFrm = new RankFrm();                    rankFrm.setVisible(true);                    break;                              case ROOM_NAME_FRM://                    setDefaultLookAndFeel();                    roomNameFrm = new RoomNameFrm();                    roomNameFrm.setVisible(true);                default:                    break;            }        }    }    public static boolean isGameQuickMathReady() {        return gameQuickMathFrm != null && gameQuickMathFrm.isVisible();    }    public static void openView(View viewName, int arg1, String arg2) {//        setDefaultLookAndFeel();        if (viewName != null) {            switch (viewName) {                case JOIN_ROOM_PASSWORD:                    joinRoomPasswordFrm = new JoinRoomPasswordFrm(arg1, arg2);                    joinRoomPasswordFrm.setVisible(true);                    break;                case FRIEND_REQUEST:                    friendRequestFrm = new FriendRequestFrm(arg1, arg2);                    friendRequestFrm.setVisible(true);            }        }    }    public static void openView(View viewName, User user) {//        setDefaultLookAndFeel();        if (viewName == View.COMPETITOR_INFO) {            competitorInfoFrm = new CompetitorInfoFrm(user);            competitorInfoFrm.setVisible(true);        }    }    public static void openView(View viewName, String arg1, String arg2) {//        setDefaultLookAndFeel();        if (viewName != null) {            switch (viewName) {                case GAME_NOTICE:                    gameNoticeFrm = new GameNoticeFrm(arg1, arg2);                    gameNoticeFrm.setVisible(true);                    break;                case LOGIN:                    loginFrm = new LoginFrm(arg1, arg2);                    loginFrm.setVisible(true);            }        }    }    public static void closeView(View viewName) {        if (viewName != null) {            switch (viewName) {                case LOGIN:                    loginFrm.dispose();                    break;                case REGISTER:                    registerFrm.dispose();                    break;                case HOMEPAGE:                    homePageFrm.dispose();                    break;                case ROOM_LIST:                    roomListFrm.dispose();                    break;                case FRIEND_LIST:                    friendListFrm.stopAllThread();                    friendListFrm.dispose();                    break;                case FIND_ROOM:                    findRoomFrm.stopAllThread();                    findRoomFrm.dispose();                    break;                case WAITING_ROOM:                    waitingRoomFrm.dispose();                    break;                                case CREATE_ROOM_PASSWORD:                    createRoomPasswordFrm.dispose();                    break;                case JOIN_ROOM_PASSWORD:                    joinRoomPasswordFrm.dispose();                    break;                case COMPETITOR_INFO:                    competitorInfoFrm.dispose();                    break;                case RANK:                    rankFrm.dispose();                    break;                case GAME_NOTICE:                    gameNoticeFrm.dispose();                    break;                case FRIEND_REQUEST:                    friendRequestFrm.dispose();                    break;                case ROOM_NAME_FRM:                    roomNameFrm.dispose();                    break;                case GAME_QUICK_MATH:                    gameQuickMathFrm.dispose();                    break;            }        }    }    public static void closeAllViews() {        if (loginFrm != null) {            loginFrm.dispose();        }        if (registerFrm != null) {            registerFrm.dispose();        }        if (homePageFrm != null) {            homePageFrm.dispose();        }        if (roomListFrm != null) {            roomListFrm.dispose();        }        if (friendListFrm != null) {            friendListFrm.stopAllThread();            friendListFrm.dispose();        }        if (findRoomFrm != null) {            findRoomFrm.stopAllThread();            findRoomFrm.dispose();        }        if (waitingRoomFrm != null) {            waitingRoomFrm.dispose();        }               if (createRoomPasswordFrm != null) {            createRoomPasswordFrm.dispose();        }        if (joinRoomPasswordFrm != null) {            joinRoomPasswordFrm.dispose();        }        if (competitorInfoFrm != null) {            competitorInfoFrm.dispose();        }        if (rankFrm != null) {            rankFrm.dispose();        }        if (gameNoticeFrm != null) {            gameNoticeFrm.dispose();        }        if (friendRequestFrm != null) {            friendRequestFrm.dispose();        }        if (roomNameFrm != null) {            roomNameFrm.dispose();        }        if (gameQuickMathFrm != null) {            gameQuickMathFrm.stopTimer();            gameQuickMathFrm.dispose();        }    }    public static void main(String[] args) {        new Client().initView();    }    public void initView() {        // Khởi tạo socket        socketHandle = new SocketHandle();        Thread socketThread = new Thread(socketHandle);        socketThread.start();        // Khởi tạo và hiển thị UI        SwingUtilities.invokeLater(() -> {//            setDefaultLookAndFeel();            loginFrm = new LoginFrm();            loginFrm.setVisible(true);        });    }    public enum View {        LOGIN,        REGISTER,        HOMEPAGE,        ROOM_LIST,        FRIEND_LIST,        FIND_ROOM,        WAITING_ROOM,        GAME_CLIENT,        CREATE_ROOM_PASSWORD,        JOIN_ROOM_PASSWORD,        COMPETITOR_INFO,        RANK,        GAME_NOTICE,        FRIEND_REQUEST,        GAME_AI,        ROOM_NAME_FRM,        GAME_QUICK_MATH    }}